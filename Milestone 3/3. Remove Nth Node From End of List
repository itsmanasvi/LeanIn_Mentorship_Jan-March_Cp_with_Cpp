class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        if(head==NULL) 
            return NULL;
        if(head->next==NULL && n==1)
            return NULL; 
        auto curr = head;
        curr = reverseList(curr);
        
       ListNode* temp=curr;
        if(n==1)
        {
            curr=temp->next;   
        }
        else
        {
            for(int i=0;i<n-2;i++)
            {
                temp=temp->next;
            }
            
            temp->next=temp->next->next;
    }
        return reverseList(curr);
    }
    
public:
    ListNode* reverseList(ListNode* head) {
        
        ListNode* prev  = NULL;
        ListNode* current  = head;
        ListNode* tempNode = NULL;
       
        
        while(current!= NULL)
        { 
            tempNode = current->next;
            current->next = prev;
            prev = current;
            current = tempNode;
            
            
        }
        
        return prev;
        
    }
        
    
};
